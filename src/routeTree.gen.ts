/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TabLayoutImport } from './routes/_tabLayout'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const TabLayoutUsbLazyImport = createFileRoute('/_tabLayout/usb')()
const TabLayoutNodesLazyImport = createFileRoute('/_tabLayout/nodes')()
const TabLayoutNodeUpgradeLazyImport = createFileRoute(
  '/_tabLayout/node-upgrade',
)()
const TabLayoutInfoLazyImport = createFileRoute('/_tabLayout/info')()
const TabLayoutFirmwareUpgradeLazyImport = createFileRoute(
  '/_tabLayout/firmware-upgrade',
)()
const TabLayoutAboutLazyImport = createFileRoute('/_tabLayout/about')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const TabLayoutRoute = TabLayoutImport.update({
  id: '/_tabLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TabLayoutUsbLazyRoute = TabLayoutUsbLazyImport.update({
  path: '/usb',
  getParentRoute: () => TabLayoutRoute,
} as any).lazy(() =>
  import('./routes/_tabLayout/usb.lazy').then((d) => d.Route),
)

const TabLayoutNodesLazyRoute = TabLayoutNodesLazyImport.update({
  path: '/nodes',
  getParentRoute: () => TabLayoutRoute,
} as any).lazy(() =>
  import('./routes/_tabLayout/nodes.lazy').then((d) => d.Route),
)

const TabLayoutNodeUpgradeLazyRoute = TabLayoutNodeUpgradeLazyImport.update({
  path: '/node-upgrade',
  getParentRoute: () => TabLayoutRoute,
} as any).lazy(() =>
  import('./routes/_tabLayout/node-upgrade.lazy').then((d) => d.Route),
)

const TabLayoutInfoLazyRoute = TabLayoutInfoLazyImport.update({
  path: '/info',
  getParentRoute: () => TabLayoutRoute,
} as any).lazy(() =>
  import('./routes/_tabLayout/info.lazy').then((d) => d.Route),
)

const TabLayoutFirmwareUpgradeLazyRoute =
  TabLayoutFirmwareUpgradeLazyImport.update({
    path: '/firmware-upgrade',
    getParentRoute: () => TabLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_tabLayout/firmware-upgrade.lazy').then((d) => d.Route),
  )

const TabLayoutAboutLazyRoute = TabLayoutAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => TabLayoutRoute,
} as any).lazy(() =>
  import('./routes/_tabLayout/about.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_tabLayout': {
      preLoaderRoute: typeof TabLayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_tabLayout/about': {
      preLoaderRoute: typeof TabLayoutAboutLazyImport
      parentRoute: typeof TabLayoutImport
    }
    '/_tabLayout/firmware-upgrade': {
      preLoaderRoute: typeof TabLayoutFirmwareUpgradeLazyImport
      parentRoute: typeof TabLayoutImport
    }
    '/_tabLayout/info': {
      preLoaderRoute: typeof TabLayoutInfoLazyImport
      parentRoute: typeof TabLayoutImport
    }
    '/_tabLayout/node-upgrade': {
      preLoaderRoute: typeof TabLayoutNodeUpgradeLazyImport
      parentRoute: typeof TabLayoutImport
    }
    '/_tabLayout/nodes': {
      preLoaderRoute: typeof TabLayoutNodesLazyImport
      parentRoute: typeof TabLayoutImport
    }
    '/_tabLayout/usb': {
      preLoaderRoute: typeof TabLayoutUsbLazyImport
      parentRoute: typeof TabLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  TabLayoutRoute.addChildren([
    TabLayoutAboutLazyRoute,
    TabLayoutFirmwareUpgradeLazyRoute,
    TabLayoutInfoLazyRoute,
    TabLayoutNodeUpgradeLazyRoute,
    TabLayoutNodesLazyRoute,
    TabLayoutUsbLazyRoute,
  ]),
  LoginLazyRoute,
])

/* prettier-ignore-end */
